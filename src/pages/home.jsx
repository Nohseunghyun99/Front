import React, { useState, useRef, useEffect } from "react";
import '../styles/Style.css';
import MainPage from './MainPage';
import ÏóÖÏ¢ÖÎ∂ÑÎ•ò from '../config/ÏóÖÏ¢ÖÎ∂ÑÎ•ò.json'
// import ChatbotWindow from "./ChatbotWindow";
import ChatBot from "../ChatBot";
import { useNavigate } from 'react-router-dom';  // ÎùºÏö∞ÌÑ∞ ÎÑ§ÎπÑÍ≤åÏù¥ÏÖòÏùÑ ÏúÑÌï¥ Ï∂îÍ∞Ä



const Home = () => {
    const [selectedCategory, setSelectedCategory] = useState("ÏóÖÏ¢Ö");
    const [showCategoryMenu, setShowCategoryMenu] = useState(false);
    const [hoveredMain, setHoveredMain] = useState(null);
    const [hoveredSub, setHoveredSub] = useState(null);
    const [selectedRegion, setSelectedRegion] = useState("ÏßÄÏó≠");
    const [showRegionMenu, setShowRegionMenu] = useState(false);
    const [selectedDong, setSelectedDong] = useState(null);  // Îèô ÏÑ§Ï†ïÏóê ÎåÄÌïú ÏÑ†ÌÉù
    const mainPageRef = useRef();
    const [isChatVisible, setIsChatVisible] = useState(false); // Ï±óÎ¥á ÎåÄÌôîÏ∞Ω ÌëúÏãú ÏÉÅÌÉú
    const navigate = useNavigate();  // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÌõÖ Ï∂îÍ∞Ä
    const [text1, setText1] = useState("");  // ÏóÖÏ¢Ö
    const [text2, setText2] = useState("");  // ÏßÄÏó≠(Îèô)

    const dongList = [
        "Í¥ëÏ≤úÎèô", "Í∏àÌò∏Îèô", "ÎÜçÏÑ±Îèô", "ÎèôÏ≤úÎèô", "ÏÉÅÎ¨¥1Îèô", "ÏÉÅÎ¨¥2Îèô",
        "ÏÑúÏ∞ΩÎèô", "ÏñëÎèô", "Ïú†ÎçïÎèô", "ÏπòÌèâÎèô", "ÌíçÏïîÎèô", "ÌôîÏ†ïÎèô"
    ];

    // Îèô ÏÑ§Ï†ï ÌÅ¥Î¶≠ Ïãú Îèô Î™©Î°ùÏùÑ Î≥¥Ïó¨Ï§å
    const handleRegionButtonClick = () => {
        setShowRegionMenu(!showRegionMenu);
    };

    // Îèô Î™©Î°ùÏóêÏÑú ÎèôÏùÑ ÏÑ†ÌÉùÌñàÏùÑ Îïå
    const handleDongSelect = (dong) => {
        setSelectedRegion(dong);
    };

    // btn2EventÏùò Î°úÏßÅÏùÑ Home Ïª¥Ìè¨ÎÑåÌä∏Î°ú Í∞ÄÏ†∏Ïò¥
    const handleRegionAndCategory = () => {
        if (mainPageRef.current?.btn2Event) {
            mainPageRef.current.btn2Event(text1, text2);
        }
    };

    // Î°úÍ∑∏Ïù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥ÎèôÌïòÎäî Ìï®Ïàò
    const handleLoginClick = () => {
        navigate('/login');  // /login Í≤ΩÎ°úÎ°ú Ïù¥Îèô
    };

    React.useEffect(() => {
        const handleClickOutside = (e) => {
            if (!e.target.closest('.category-button-wrapper')) {
                setShowCategoryMenu(false);
                setShowRegionMenu(false);
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        return () => document.removeEventListener('mousedown', handleClickOutside);
    }, []);

    useEffect(() => {
        if (text1) {
            handleRegionAndCategory();
            console.log("ÌÖçÏä§Ìä∏1" , text1); 
        }
    }, [text1]);


    // ÌÖçÏä§Ìä∏ Í∞íÏù¥ ÏóÖÎç∞Ïù¥Ìä∏Îêú ÌõÑ handleRegionAndCategoryÎ•º Ìò∏Ï∂úÌïòÍ∏∞ ÏúÑÌï¥ useEffect ÏÇ¨Ïö©
    useEffect(() => {
        if (text2) {
            handleRegionAndCategory();
        }
    }, [text2]);  // text2Í∞Ä Î≥ÄÍ≤ΩÎê† ÎïåÎßàÎã§ Ìò∏Ï∂úÎê®



    const handleButtonClick = () => {
        setIsChatVisible(!isChatVisible);  // Ï±óÎ¥á ÎåÄÌôîÏ∞Ω Ïà®Í∏∞Í∏∞
    };


    return (
        <div className="map-wrapper">

            <MainPage ref={mainPageRef} />

            {/* ‚úÖ ÏßÄÎèÑ ÏúÑÏóê Îñ†ÏûàÎäî Î≤ÑÌäºÎì§ */}
            <div className="ui-overlay">
                <div className="top-row">
                    <div className="left-buttons">
                        <div className="category-button-wrapper">
                            <button className="Button1" onClick={() => setShowCategoryMenu(!showCategoryMenu)}>{selectedCategory}</button>

                            {showCategoryMenu && (
                                <div className="category-menu-container">
                                    <div className="category-menu">
                                        {Object.entries(ÏóÖÏ¢ÖÎ∂ÑÎ•ò).map(([main, subs]) => (
                                            <div
                                                key={main}
                                                className="category-item"
                                                onMouseEnter={() => setHoveredMain(main)}
                                            >
                                                {main}

                                                {hoveredMain === main && (
                                                    <div className="subcategory-menu">
                                                        {Object.entries(subs).map(([sub, details]) => (
                                                            <div
                                                                key={sub}
                                                                className="subcategory-item"
                                                                onMouseEnter={() => setHoveredSub(sub)}
                                                            >
                                                                {sub}

                                                                {hoveredSub === sub && (
                                                                    <div className="subsubcategory-menu">
                                                                        {details.map((detail) => (
                                                                            <div
                                                                                key={detail}
                                                                                className="subsubcategory-item"
                                                                                onClick={() => {
                                                                                    setSelectedCategory(detail);
                                                                                    setText1(detail);  // ‚úÖ text1Ïóê Ï†ÄÏû•
                                                                                    setShowCategoryMenu(false);
                                                                                    setHoveredMain(null);
                                                                                    setHoveredSub(null);
                                                                                }}
                                                                            >
                                                                                {detail}
                                                                            </div>
                                                                        ))}
                                                                    </div>
                                                                )}
                                                            </div>
                                                        ))}
                                                    </div>
                                                )}
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>

                        <div className="category-button-wrapper">
                            <button
                                className="Button1"
                                onClick={() => {
                                    setShowRegionMenu(!showRegionMenu);
                                    setShowCategoryMenu(false); // Îã§Î•∏ Î©îÎâ¥Îäî Îã´Í∏∞
                                }}
                            >
                                {selectedRegion}
                            </button>

                            {showRegionMenu && (
                                <div className="category-menu-container region-menu">
                                    <div className="category-menu">
                                        {["Îèô ÏÑ§Ï†ï", "Î≤îÏúÑ ÏÑ§Ï†ï", "Îã§Í∞ÅÌòï ÏÑ§Ï†ï"].map((option) => (
                                            <div
                                                key={option}
                                                className="category-item"
                                                onMouseEnter={() => setHoveredMain(option)}
                                                onClick={() => {
                                                    if (option === "Îã§Í∞ÅÌòï ÏÑ§Ï†ï") {
                                                        // Îèô Ïù¥Î¶ÑÏùÄ ÌïÑÏöî ÏóÜÏúºÎØÄÎ°ú selectedDongÏù¥ÎÇò text2Îäî Í±¥ÎìúÎ¶¨ÏßÄ ÏïäÏùå
                                                        setSelectedRegion("Îã§Í∞ÅÌòï ÏÑ§Ï†ï");
                                                        handleRegionAndCategory();  // Ïù¥Í±¥ polygon Í∑∏Î¶¨Í∏∞Ïö© Ïù¥Î≤§Ìä∏ Î∞úÏÉùÏö©
                                                        setShowRegionMenu(false);
                                                        setHoveredMain(null);
                                                        setSelectedDong(option);
                                                        setText2(option);  // ‚úÖ text2Ïóê Ï†ÄÏû•
                                                        console.log("üëâ ÌÖçÏä§Ìä∏:", text2);
                                                    } else if (option === "Îèô ÏÑ§Ï†ï") {
                                                        setHoveredMain("Îèô ÏÑ§Ï†ï");
                                                    }
                                                }}
                                            >
                                                {option}

                                                {/* ‚úÖ Îèô ÏÑ§Ï†ï Ïãú Ï§ëÎ∂ÑÎ•ò (Îèô Î™©Î°ù) ÏòÜÏúºÎ°ú ÌëúÏãú */}
                                                {hoveredMain === "Îèô ÏÑ§Ï†ï" && option === "Îèô ÏÑ§Ï†ï" && (
                                                    <div className="subcategory-menu">
                                                        {dongList.map((dong) => (
                                                            <div
                                                                key={dong}
                                                                className="subcategory-item"
                                                                onClick={(e) => {
                                                                    e.stopPropagation();
                                                                    setSelectedRegion(dong);
                                                                    setSelectedDong(dong);
                                                                    setText2(dong);  // ‚úÖ text2Ïóê Ï†ÄÏû•
                                                                    setShowRegionMenu(false);
                                                                    setHoveredMain(null);
                                                                    handleRegionAndCategory(); // Îèô ÏÑ†ÌÉù Ïãú
                                                                    console.log("üëâ ÌÖçÏä§Ìä∏2222:", text2);
                                                                }}
                                                            >
                                                                {dong}
                                                            </div>
                                                        ))}
                                                    </div>
                                                )}
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>


                    <div className="right-buttons">
                        <button className="Button2" onClick={handleLoginClick}>Î°úÍ∑∏Ïù∏</button>
                    </div>
                </div>


                <div className="bottom-row">
                    <button className="image-button" onClick={handleButtonClick}>
                        <img
                            src="https://storage.googleapis.com/tagjs-prod.appspot.com/v1/7BrQmBK8fB/8qkztdd1_expires_30_days.png"
                            className="image6"
                            alt="logo"
                        />
                    </button>
                </div>
            </div>

            {/* Ï±óÎ¥á Ï∞ΩÏùÑ Ï°∞Í±¥Î∂Ä Î†åÎçîÎßÅÏúºÎ°ú Î≥ÄÍ≤Ω */}
            {isChatVisible && (
                <div className="chat-container">
                    <ChatBot />
                </div>
            )}
        </div>
    );
};


export default Home